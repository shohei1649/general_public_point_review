// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "general_public_point_review": Application User Types
//
// Command:
// $ goagen
// --design=github.com/work/general_public_point_review/design
// --out=$(GOPATH)/src/github.com/work/general_public_point_review
// --version=v1.3.0

package client

import (
	"github.com/goadesign/goa"
)

// occupyPayLoad user type.
type occupyPayLoad struct {
	AgentID *int    `form:"agentId,omitempty" json:"agentId,omitempty" xml:"agentId,omitempty"`
	Data    *string `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	OtaID   *int    `form:"otaId,omitempty" json:"otaId,omitempty" xml:"otaId,omitempty"`
	Sign    *string `form:"sign,omitempty" json:"sign,omitempty" xml:"sign,omitempty"`
}

// Validate validates the occupyPayLoad type instance.
func (ut *occupyPayLoad) Validate() (err error) {
	if ut.OtaID == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "otaId"))
	}
	if ut.Data == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "data"))
	}
	if ut.Sign == nil {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`request`, "sign"))
	}
	return
}

// Publicize creates OccupyPayLoad from occupyPayLoad
func (ut *occupyPayLoad) Publicize() *OccupyPayLoad {
	var pub OccupyPayLoad
	if ut.AgentID != nil {
		pub.AgentID = ut.AgentID
	}
	if ut.Data != nil {
		pub.Data = *ut.Data
	}
	if ut.OtaID != nil {
		pub.OtaID = *ut.OtaID
	}
	if ut.Sign != nil {
		pub.Sign = *ut.Sign
	}
	return &pub
}

// OccupyPayLoad user type.
type OccupyPayLoad struct {
	AgentID *int   `form:"agentId,omitempty" json:"agentId,omitempty" xml:"agentId,omitempty"`
	Data    string `form:"data" json:"data" xml:"data"`
	OtaID   int    `form:"otaId" json:"otaId" xml:"otaId"`
	Sign    string `form:"sign" json:"sign" xml:"sign"`
}

// Validate validates the OccupyPayLoad type instance.
func (ut *OccupyPayLoad) Validate() (err error) {

	if ut.Data == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "data"))
	}
	if ut.Sign == "" {
		err = goa.MergeErrors(err, goa.MissingAttributeError(`type`, "sign"))
	}
	return
}
